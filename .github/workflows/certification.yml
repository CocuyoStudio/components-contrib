# ------------------------------------------------------------
# Copyright 2021 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------

name: Stable Components Certification Tests

on:
  workflow_dispatch:

jobs:
  certification:
    # Add "id-token" with the intended permissions.
    # Needed by the 'Authenticate to Google Cloud' step.
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-22.04
    env:
      GOCOV_VER: "v1.1.0"
      GOTESTSUM_VER: "v1.9.0"
    defaults:
      run:
        shell: bash

    steps:
    - name: Set default payload repo and ref
      run: |
        echo "CHECKOUT_REPO=${{ github.repository }}" >> $GITHUB_ENV
        echo "CHECKOUT_REF=${{ github.ref }}" >> $GITHUB_ENV
        echo "TEST_PATH=tests/certification/state/gcp/firestore" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v3

    # Authenticate with GCP Workload Identity Pool
    # Exports GCP ENV Vars:
    #    - GCP_PROJECT
    #    - GOOGLE_APPLICATION_CREDENTIALS
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: "projects/369878874207/locations/global/workloadIdentityPools/rob-contrib-cert-tests-pool/providers/rob-contrib-cert-tests-provider"
        service_account: "rob-contrib-wif-sa@dapr-tests.iam.gserviceaccount.com"
        create_credentials_file: true
        export_environment_variables: true
        cleanup_credentials: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
    
    - name: Set up Go
      id: setup-go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'

    - name: Download Go dependencies
      working-directory: ${{ env.TEST_PATH }}
      run: |
        go mod download
        go install github.com/axw/gocov/gocov@${{ env.GOCOV_VER }}
        go install gotest.tools/gotestsum@${{ env.GOTESTSUM_VER }}

    - name: Catch setup failures
      if: failure()
      run: |
        echo "CERTIFICATION_FAILURE=true" >> $GITHUB_ENV

    - name: Run tests
      continue-on-error: false
      working-directory: ${{ env.TEST_PATH }}
      run: |
        echo "Running certification tests ... "
        export GOLANG_PROTOBUF_REGISTRATION_CONFLICT=ignore
        set +e
        gotestsum --jsonfile certification.json \
          --junitfile certification.xml --format standard-quiet -- \
          -coverprofile=cover.out -covermode=set -tags=certtests -timeout=30m
        status=$?
        if test $status -ne 0; then
          echo "Setting CERTIFICATION_FAILURE"
          export CERTIFICATION_FAILURE=true
        fi
        set -e
      
        if [[ -v CERTIFICATION_FAILURE ]]; then
          echo "CERTIFICATION_FAILURE=true" >> $GITHUB_ENV
          exit 1
        else
          echo "CERTIFICATION_FAILURE=false" >> $GITHUB_ENV
        fi